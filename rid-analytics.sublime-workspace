{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"is_",
				"is_all_eop"
			],
			[
				"EN",
				"END_OF_PATH"
			],
			[
				"get_",
				"get_curr_level	(node.h)"
			],
			[
				"cur",
				"curr_node_level"
			],
			[
				"nex",
				"next_node_prob"
			],
			[
				"get",
				"get_next_level"
			],
			[
				"size",
				"sizeof"
			],
			[
				"fil",
				"fill"
			],
			[
				"MAX",
				"MAX_LEVEL_DEPTH"
			],
			[
				"level",
				"level_depth"
			],
			[
				"o_p",
				"o_optimistic"
			],
			[
				"ali",
				"align_nodes"
			],
			[
				"nodes",
				"nodes_to_align_size"
			],
			[
				"nodes_",
				"nodes_to_align"
			],
			[
				"prope",
				"property"
			],
			[
				"std",
				"std::to_string"
			],
			[
				"set",
				"set_curr_level"
			],
			[
				"next_no",
				"next_node_prob"
			],
			[
				"next_",
				"next_node_prob"
			],
			[
				"c_",
				"c_node"
			],
			[
				"set_",
				"set_uid	(node.h)"
			],
			[
				"var",
				"varname	(graph.cpp)"
			],
			[
				"re",
				"return"
			],
			[
				"str",
				"string	(graph.h)"
			],
			[
				"edge",
				"edge_str"
			],
			[
				"dep",
				"depth"
			],
			[
				"cu",
				"curr_node_level"
			],
			[
				"de",
				"depth"
			],
			[
				"DE",
				"DECISION"
			],
			[
				"do",
				"double	(rid-analytics.cpp)"
			],
			[
				"next",
				"next_depth"
			],
			[
				"bre",
				"breadth"
			],
			[
				"get_node",
				"get_node_type_int"
			],
			[
				"get_ty",
				"get_type_int	(graph.cpp)"
			],
			[
				"prev_",
				"prev_node"
			],
			[
				"node_ty",
				"node_type_int"
			],
			[
				"inc",
				"include"
			],
			[
				"graph",
				"graphviz"
			],
			[
				"GR",
				"GRAPHVIZ_COLORS	(graph.cpp)"
			],
			[
				"node_type",
				"node_type_int"
			],
			[
				"deci",
				"decision"
			],
			[
				"add",
				"add_node	(graph.h)"
			],
			[
				"te",
				"terminate	(graph.h)"
			],
			[
				"in",
				"init"
			],
			[
				"edg",
				"edge_str"
			],
			[
				"pro",
				"prob_val_str"
			],
			[
				"MAX_S",
				"MAX_STRING_SIZE"
			],
			[
				"node",
				"node_varname_str"
			],
			[
				"out",
				"output"
			],
			[
				"node_",
				"node_varname_str"
			],
			[
				"new",
				"new_level"
			],
			[
				"I_",
				"I_NODE_INT	(graph.h)"
			],
			[
				"prev",
				"prev_level"
			],
			[
				"gra",
				"graph_filestream"
			],
			[
				"prob",
				"prob_val	(node.h)"
			],
			[
				"type",
				"type_str"
			],
			[
				"file",
				"filename"
			],
			[
				"chec",
				"checksum"
			],
			[
				"pen",
				"penalty_latency"
			],
			[
				"print",
				"printf	printf â€¦"
			],
			[
				"back",
				"background"
			],
			[
				"adam",
				"adamiaonr	(Makefile)"
			],
			[
				"dec",
				"decision"
			],
			[
				"decisio",
				"decision"
			],
			[
				"def",
				"define"
			],
			[
				"dou",
				"double"
			],
			[
				"I",
				"I_NODE"
			],
			[
				"lea",
				"leaf_itr"
			],
			[
				"pena",
				"penalties"
			],
			[
				"penal",
				"penalties"
			],
			[
				"poss",
				"possible_source_slots"
			],
			[
				"cand",
				"candidate_penalties"
			],
			[
				"content",
				"content_source_dist"
			],
			[
				"comple",
				"complement_dist"
			],
			[
				"CONT",
				"CONTENT_SOURCES_DIST"
			],
			[
				"distr",
				"distributions"
			],
			[
				"get_d",
				"get_double_property_array"
			],
			[
				"complement_",
				"complement_dist"
			],
			[
				"COM",
				"COMPLEMENT_DIST"
			],
			[
				"gets",
				"get_string_property_array	(dataparser.h)"
			],
			[
				"string",
				"string_array"
			],
			[
				"doub",
				"double_array"
			],
			[
				"double",
				"double_value	(scn_parser.cpp)"
			],
			[
				"int_",
				"int_value	(scn_parser.cpp)"
			],
			[
				"cl",
				"close"
			],
			[
				"scn_",
				"scn_filename"
			],
			[
				"cont",
				"continue	(rid-analytics.cpp)"
			],
			[
				"sc",
				"scn_filename"
			],
			[
				"S",
				"SCNParser	(scn_parser.h)"
			],
			[
				"i",
				"i_node"
			],
			[
				"pe",
				"penalty_latency"
			],
			[
				"max",
				"max_level"
			],
			[
				"base",
				"base_latency"
			],
			[
				"leve",
				"level_depth"
			],
			[
				"curr",
				"curr_node_max_level"
			],
			[
				"se",
				"set_level"
			],
			[
				"hand",
				"handle_decision"
			],
			[
				"Node",
				"Node::O_NODE"
			],
			[
				"UN",
				"UNKNOWN"
			],
			[
				"pre",
				"prev_node_type"
			],
			[
				"n",
				"n_node"
			],
			[
				"prev_p",
				"prev_node_prob_val"
			],
			[
				"LEA",
				"LEAF_LEVEL"
			],
			[
				"prev_node_",
				"prev_node_level"
			],
			[
				"N_",
				"N_NODE	(node.h)"
			],
			[
				"prev_n",
				"prev_node_level"
			],
			[
				"root",
				"root_node"
			],
			[
				"appe",
				"append_child"
			],
			[
				"content_",
				"content_sources_dist"
			],
			[
				"late",
				"latencies"
			],
			[
				"exp",
				"exponent"
			],
			[
				"request_",
				"request_size"
			],
			[
				"com",
				"complement"
			],
			[
				"MA",
				"MAX_LEVEL_DEPTH"
			],
			[
				"level_",
				"level_depth"
			],
			[
				"IN",
				"INTERNAL	(node.h)"
			],
			[
				"lat",
				"latency_val"
			],
			[
				"probab",
				"probability"
			],
			[
				"co",
				"configuring"
			],
			[
				"OP_",
				"OP_WRITE"
			],
			[
				"Crea",
				"CreationMode	(xiaridpatricia.hh)"
			],
			[
				"ROO",
				"ROOT_NODE	(xiaridpatricia.hh)"
			],
			[
				"DEFA",
				"DEFAULT_CHUNK_SIZE	(xcache.c)"
			],
			[
				"un",
				"unparse"
			],
			[
				"posi",
				"position"
			],
			[
				"key",
				"key_bit"
			],
			[
				"sour",
				"source_xid"
			],
			[
				"num",
				"num_nodes"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 122.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/adamiaonr/Workbench/rid-analytics"
	],
	"file_history":
	[
		"/home/adamiaonr/Workbench/rid-analytics/rid-analytics.sublime-project",
		"/home/adamiaonr/Workbench/papers/rids/rids.tex",
		"/home/adamiaonr/Workbench/papers/rids/introduction.tex",
		"/home/adamiaonr/Workbench/sandbox/test.c",
		"/home/adamiaonr/Workbench/rid-analytics/src/rid-analytics.cpp",
		"/home/adamiaonr/Workbench/rid-analytics/test/graphs/test.dot",
		"/home/adamiaonr/Workbench/rid-analytics/include/node.h",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/sample.scn",
		"/home/adamiaonr/Workbench/rid-analytics/Makefile",
		"/home/adamiaonr/Workbench/xia/xia-core/api/rid/test/src/pt.c",
		"/home/adamiaonr/Workbench/rid-analytics/include/dataparser.h",
		"/home/adamiaonr/Workbench/rid-analytics/include/graph.h",
		"/home/adamiaonr/Workbench/rid-analytics/src/graph.cpp",
		"/home/adamiaonr/Workbench/rid-analytics/src/dataparser.cpp",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/data/30.dat",
		"/home/adamiaonr/Workbench/rid-analytics/test.dot",
		"/home/adamiaonr/Workbench/sandbox/hostname.c",
		"/home/adamiaonr/Workbench/sandbox/gethostname.c",
		"/home/adamiaonr/Workbench/sandbox/hostname",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/include/Matlab.h",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/src/Matlab.cpp",
		"/home/adamiaonr/Workbench/xia/xia-core/api/rid/extra/ridmodule.c",
		"/home/adamiaonr/Workbench/xia/xia-core/api/rid/test/src/lookup_stats.c",
		"/home/adamiaonr/Workbench/xia/xia-core/api/rid/test/src/rid_utils.c",
		"/home/adamiaonr/Workbench/papers/rids/conclusions.tex",
		"/home/adamiaonr/Workbench/papers/rids/related-work.tex",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/semantics.tex",
		"/home/adamiaonr/Workbench/papers/rids/evaluation.tex",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/optimize.tex",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/optimize.tex",
		"/home/adamiaonr/Workbench/papers/rids/fp-solutions.tex",
		"/home/adamiaonr/Workbench/papers/rids/fp-analysis.tex",
		"/home/adamiaonr/Workbench/papers/rids/design.tex",
		"/home/adamiaonr/Workbench/papers/rids/problem.tex",
		"/home/adamiaonr/Workbench/papers/rids/preamble.tex",
		"/home/adamiaonr/Workbench/papers/rids/Makefile",
		"/home/adamiaonr/Downloads/reddit",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/background.tex",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/semantics.tex",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/design.tex",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/problem.tex",
		"/home/adamiaonr/Downloads/startbootstrap-freelancer-1.0.5/index.html",
		"/home/adamiaonr/Downloads/startbootstrap-creative-1.0.2/css/creative.css",
		"/home/adamiaonr/Downloads/startbootstrap-freelancer-1.0.5/css/freelancer.css",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/sig-alternate.cls",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/introduction.tex",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/conclusions.tex",
		"/home/adamiaonr/Downloads/conclusions",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/challenges.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/research-statement/cover-letter.txt",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/research-statement/statement.tex",
		"/home/adamiaonr/Downloads/reddit.post",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/challenges.tex",
		"/home/adamiaonr/Workbench/papers/rids/background.tex",
		"/home/adamiaonr/Workbench/rid-analytics/include/tree/tree.hh",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/src/tree_example.cc",
		"/home/adamiaonr/Workbench/coursework/18-859/doc/mid-evaluation/mid-evaluation.tex",
		"/home/adamiaonr/Workbench/coursework/18-859/doc/mid-evaluation/Makefile",
		"/home/adamiaonr/Workbench/coursework/18-859/doc/dsn.tex",
		"/home/adamiaonr/Workbench/papers/qualifier-2015/Makefile",
		"/home/adamiaonr/Workbench/coursework/18-859/doc/final/Makefile",
		"/home/adamiaonr/Workbench/coursework/18-859/doc/Makefile",
		"/home/adamiaonr/Workbench/coursework/18-859/doc/dsn-non-paper.bib",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/research-statement/conclusions",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/research-statement/Makefile",
		"/home/adamiaonr/Workbench/xia/xia-core/applications/rid/src/rid_requester.c",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/doc/instances/A_n34_k5_sa.m",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/Makefile",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/adamiaonr-cv.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/education.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/publications.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/experience.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/projects.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/coursework.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/honors.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/awesome-cv.cls",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/skills.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/writing.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/presentation.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/awesome-cv/resume/extracurricular.tex",
		"/home/adamiaonr/Dropbox/Workbench/PhD/individual topics/cv/fancy-cv/Makefile",
		"/home/adamiaonr/Downloads/google.braggin",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/Makefile",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/doc/treefig.pdf",
		"/home/adamiaonr/Workbench/papers/rids/code/paper.m",
		"/home/adamiaonr/Workbench/xia/xia-core/api/rid/include/rid.h",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/include/CWS.h",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/include/CVRP.h",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/src/vrp.cpp",
		"/home/adamiaonr/Workbench/rid-analytics/include/data-parser.h",
		"/home/adamiaonr/Workbench/rid-analytics/src/data-parser.cpp",
		"/home/adamiaonr/Workbench/rid-analytics/src/scn_parser.cpp",
		"/home/adamiaonr/Workbench/rid-analytics/include/scn_parser.h",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/src/DatasetParser.cpp",
		"/home/adamiaonr/Workbench/coursework/decision-support-cvrp/include/DatasetParser.h",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/data/25.dat",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/data/20.dat",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/data/15.dat",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/data/10.dat",
		"/home/adamiaonr/Workbench/rid-analytics/test/configs/data/5.dat",
		"/home/adamiaonr/Downloads/20.mat",
		"/home/adamiaonr/Workbench/xia/xia-core/api/rid/src/rid.c",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/src/test2.cc",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/src/test1.cc",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/src/test_tree.cc",
		"/home/adamiaonr/Workbench/xia/xia-core/click/elements/xia/xiaridroutetable.hh",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/Makefile",
		"/home/adamiaonr/Workbench/sandbox/tree/tree-3.1/src/simple tree.hpp",
		"/home/adamiaonr/Workbench/rid-analytics/lib/argvparser/argvparser.cpp",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/preamble.tex",
		"/home/adamiaonr/Workbench/rid-analytics/include/tree/tree_util.hh",
		"/home/adamiaonr/Downloads/quora.question",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/evaluation.tex",
		"/home/adamiaonr/Workbench/papers/hotnets-2015/hotnets15.tex",
		"/home/adamiaonr/Workbench/xia/xia-core/click/elements/xia/xiaridroutetable.cc",
		"/home/adamiaonr/Workbench/xia/xia-core/click-2.0.1/lib/element.cc",
		"/home/adamiaonr/Workbench/xia/xia-core/click/lib/router.cc",
		"/home/adamiaonr/Workbench/xia/xia-core/click/include/click/router.hh",
		"/home/adamiaonr/Workbench/xia/xia-core/click-2.0.1/include/click/element.hh",
		"/home/adamiaonr/Workbench/xia/xia-core/click/include/click/xiaridpatricia.hh",
		"/home/adamiaonr/Workbench/xia/xia-core/click-2.0.1/lib/handlercall.cc",
		"/home/adamiaonr/Workbench/xia/xia-core/click/elements/xia/xtransport.hh",
		"/home/adamiaonr/Workbench/xia/xia-core/click/elements/xia/xtransport.cc",
		"/home/adamiaonr/Workbench/xia/xia-core/api/xsocket/Xbind.c",
		"/home/adamiaonr/Workbench/xia/xia-core/applications/rid/src/rid_producer.c",
		"/home/adamiaonr/Workbench/xia/xia-core/applications/rid/test/rid_run_simple.sh",
		"/home/adamiaonr/Workbench/xia/xia-core/click/elements/xia/xiaxidroutetable.hh",
		"/home/adamiaonr/Workbench/xia/xia-core/click-2.0.1/lib/router.cc"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/home/adamiaonr/Workbench/zeromq-4.0.4/src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"is_all_eop",
			"tree<Node *>",
			"o_optimistic",
			"align_nodes(graph_viz, ",
			"align_nodes(",
			"align_nodes",
			"[n - 1]",
			"get_level",
			"set_level",
			"_prob_va",
			"prev_node_prob",
			"sizeof(Node *)",
			"breadth++",
			"I21[",
			"next_level",
			"curr_",
			"curr_level",
			"decision",
			"get_node_type_str",
			"std::str",
			"std::sti",
			"dot_",
			"next_level",
			"prev_level",
			"std::s",
			"o_op",
			"shown in T",
			"Han",
			"han",
			"Han",
			"subsubsection",
			"Cons:",
			"Cons?",
			"Pros:",
			"to",
			"capaci",
			"$",
			"header",
			"color",
			"name",
			"complement",
			"challenges-fps-tbl",
			"\\le",
			"fig:challenges-fps-fwd",
			"tnote",
			"distri",
			"%",
			"-#",
			"		",
			"	-#",
			"	",
			"prev_node",
			"c_optimistic",
			"c-optimistic",
			"CMU",
			"publ",
			"	",
			"cvskills",
			"FhP AICOS",
			"email",
			"stackoverflowid",
			"mobiile",
			"ifistart",
			"mobile",
			"homepage",
			"github",
			"bfseries",
			"sectionstyle",
			"red",
			"continue",
			"is_valid",
			"{",
			"data_filename",
			"hops",
			"-#",
			"SUM",
			"COMPLEMENT_DIST",
			"CONTENT_SOURCES_DIST",
			"CONPLEMENT_DIST",
			"latencies",
			"data-parser",
			"scn_parser",
			"scn_filename",
			"SCNParser",
			"SCN_PARSER_HH",
			"DATA_PARSER_HH",
			"int_value",
			"fin.",
			"	",
			"fin.",
			"close",
			"_node.",
			"min",
			"prev_node_level",
			"prev_node_level - 1",
			"prev_node_next_level",
			"set_level",
			"prev_node_latency_val",
			"prev_latency",
			"prev_prob",
			"prev_level",
			"prev_node_prob_val",
			"level",
			"path_tree",
			"prob_tree",
			"path_tree",
			"LEAF_LEVEL",
			"curr_node_latency_val",
			"curr_node_prob_val",
			"curr_node_level",
			"depth",
			"std::string get_level",
			"std::string level",
			"index",
			"ScnParser::",
			"	",
			"Run",
			"DataP",
			"_cws_version",
			"pdf",
			"click_ch",
			"if(!h",
			"eindex",
			"name",
			"_router",
			"class_name",
			"rid_",
			"click_c"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"align_nodes(graphviz_graph, ",
			"align_nodes(graph_viz, ",
			"get_next_level",
			"set_next_level",
			"sizeof(const Node *)",
			"level",
			"depth",
			"graphviz_",
			"next_depth",
			"prev_depth",
			"Drawbacks:",
			"Advantages:",
			"",
			"fps-rates-fib",
			"fig:fps-rates-entry",
			"",
			"*",
			"       ",
			"   -#",
			"    ",
			"o_optimistic",
			"o-optimistic",
			"o_optimistic",
			"o-optimistic",
			"Carnegie Mellon University",
			"    ",
			"CMU",
			"dat_filename",
			"*",
			"CONTENT_SOURCE_DIST",
			"DataParser",
			"data-parser",
			"data_filename",
			"DataParser",
			"DATA_PARSER_HH",
			"double_value",
			"ifs.",
			"    ",
			"_node->",
			"curr_node_level",
			"next_node_level",
			"prev_node_level",
			"set_next_level",
			"prev_node_latency",
			"prev_node_prob",
			"prev_node_level",
			"prev_node_prob",
			"next_level",
			"decision_tree",
			"path_tree",
			"END_OF_PATH",
			"next_node_latency_val",
			"next_node_prob_val",
			"next_node_level",
			"int get_level",
			"int level",
			"level",
			"",
			"    ",
			"",
			"    ",
			"host->",
			"    ",
			"makeHost",
			"#",
			"bf",
			"    ",
			"XIA_DIR",
			"data_to_push_size",
			"to_push_size",
			"data_to_push",
			"payload",
			"cid_push_payload",
			"rid_local_addr",
			"x_sock",
			"listen_sock",
			"send_sock",
			"listen_sock",
			"send_sock",
			"rid_dest_addr",
			"name_to_mangle",
			"bloom_filter",
			"name",
			"name_to_rid",
			"",
			"snd_pcm_stream_lock",
			"snd_pcm_stream_un",
			"~",
			"milliseconds",
			"width=0.30",
			"]{",
			"",
			" ",
			"",
			", ",
			"",
			" ",
			"",
			" ",
			"",
			",0], ",
			"",
			"devnullian",
			", ",
			"\\n",
			"//snd_pcm_stream_lock_irq(substream)",
			"//snd_pcm_stream_unlock_irq(substream)",
			"//snd_pcm_stream_lock_irq(substream)",
			"SND_SOC_DAPM_CLASS_PCM",
			"//add_log_entry",
			"//add",
			"//flush",
			"//add_log_entry",
			"--just-copy",
			"JUST_COPY",
			"//add_log",
			"pcm.c",
			"H_{",
			"$H_{",
			"bas-setup",
			"/data/",
			"$SERVER_ADB",
			"/data/sandbox",
			"\\newline{}> ",
			"-",
			"footnote{\\scriptsize",
			"flat ID",
			"content-centric"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "rid-analytics.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"xiaridro",
				"click/elements/xia/xiaridroutetable.hh"
			],
			[
				"xiaridp",
				"click/include/click/xiaridpatricia.hh"
			],
			[
				"rid",
				"applications/rid/src/rid_producer.c"
			],
			[
				"rid_p",
				"applications/rid/src/rid_producer.c"
			],
			[
				"xids",
				"etc/xids"
			],
			[
				"xtrans",
				"click/elements/xia/xtransport.cc"
			],
			[
				"rid_po",
				"applications/rid/src/rid_producer.c"
			],
			[
				"xcache",
				"daemons/xcache/api/xcache.c"
			],
			[
				"xcache.c",
				"daemons/xcache/api/xcache.c"
			],
			[
				"xia_ro",
				"click/conf/xia_router_lib.click"
			],
			[
				"xia_la",
				"etc/click/xia_large_topology.click"
			],
			[
				"xia_li",
				"click/conf/xia_router_lib.click"
			],
			[
				"xiaridu",
				"click/lib/xiaridutil.cc"
			],
			[
				"xid.c",
				"click/lib/xid.cc"
			],
			[
				"xput",
				"api/xsocket/XputChunk.c"
			],
			[
				"controller.",
				"daemons/xcache/include/controller.h"
			],
			[
				"xsendto",
				"click/conf/geni/xia-demo-scripts/setup_end_host_evolve.sh"
			],
			[
				"xsocket",
				"api/xsocket/Xsocket.c"
			],
			[
				"xbind",
				"api/xsocket/Xbind.c"
			],
			[
				"xtransport.cc",
				"click/elements/xia/xtransport.cc"
			],
			[
				"xpush",
				"api/xsocket/XpushChunkto.c"
			],
			[
				"xpushc",
				"api/xsocket/XpushChunkto.c"
			],
			[
				".proto",
				"daemons/xcache/proto/xcache_cmd.proto"
			],
			[
				"xbindpu",
				"api/xsocket/XbindPush.c"
			],
			[
				"makefiel",
				"applications/rid/Makefile"
			],
			[
				"controller.cc",
				"daemons/xcache/src/controller.cc"
			],
			[
				"makefile.in",
				"click/userlevel/Makefile.in"
			],
			[
				"xtransport",
				"click/elements/xia/xtransport.cc"
			],
			[
				"proto",
				"api/xsocket/xia.proto"
			],
			[
				"xia_router",
				"etc/click/xia_router_lib.click"
			],
			[
				"xia_router_k",
				"click-2.0.1/conf/xia_router_lib.click"
			],
			[
				"xia_rot",
				"etc/click/xia_router_lib.click"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 512.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 199.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
